% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/subsampleCounts.R
\name{subsampleCounts}
\alias{subsampleCounts}
\alias{rarifyCounts}
\alias{subsampleCounts,SummarizedExperiment-method}
\title{Subsample Counts in a \code{SummarizedExperiment} or \code{TreeSummarizedExperiment} object}
\usage{
subsampleCounts(
  x,
  abund_values = "counts",
  min_size = min(colSums2(assay(x))),
  seed = runif(1, 0, .Machine$integer.max),
  replace = TRUE,
  name = "subsampled",
  verbose = TRUE,
  return_type = c("TreeSummarizedExperiment", "MultiAssayExperiment"),
  ...
)

\S4method{subsampleCounts}{SummarizedExperiment}(
  x,
  abund_values = "counts",
  min_size = min(colSums2(assay(x))),
  seed = runif(1, 0, .Machine$integer.max),
  replace = TRUE,
  name = "subsampled",
  verbose = TRUE,
  return_type = c("TreeSummarizedExperiment", "MultiAssayExperiment"),
  ...
)
}
\arguments{
\item{x}{A
\code{SummarizedExperiment} or \code{TreeSummarizedExperiment} object.}

\item{abund_values}{A single character value for selecting the
\code{SummarizedExperiment} or \code{TreeSummarizedExperiment} \code{assay}
used for random subsampling. Only counts are useful and other transformed
data as input will give meaningless output.}

\item{min_size}{A single integer value equal to the number of counts being
simulated this can equal to lowest number of total counts
found in a sample or a user specified number.}

\item{seed}{A random number seed for reproducibility of sampling.}

\item{replace}{Logical Default is \code{TRUE}. The default is with
replacement (\code{replace=TRUE}).
See \code{\link[phyloseq:rarefy_even_depth]{phyloseq::rarefy_even_depth}}
for details on implications of this parameter.}

\item{name}{A single character value specifying the name of transformed
abundance table.}

\item{verbose}{Logical Default is \code{TRUE}. When \code{TRUE} an additional
message about the random number used is printed.}

\item{return_type}{Either TreeSummarizedExperiment or MultiAssayExperiment
If samples are removed after subsampling the input TreeSE object is
modified. In such senario, if the return_type = MultiAssayExperiment then
the output TreeSE is returned within a \code{MultiAssayExperiment} object
which includes the input and modified output TreeSE as experiments within the
\code{\link[MultiAssayExperiment:experiments]{MultiAssayExperiment::experiments}}.
However, if samples are removed after subsampling and the
return_type = TreeSummarizedExperiment then the modified TreeSE is returned.

If the output does not have any samples removed then the subsampled assay
is returned as an alternative experiment i.e. \code{altExps}.}

\item{...}{additional arguments not used}
}
\value{
Either a \code{TreeSummarizedExperiment} or a
\code{MultiAssayExperiment} object
}
\description{
\code{subsampleCounts} will randomly subsample counts in SE/TreeSE to return a SE/TreeSE in
which each sample has same number of total observations/counts/reads.
}
\details{
Although the subsampling approach is highly debated in microbiome research,
we include the \code{subsampleCounts} function because in some instances these
can be useful. Note that the output of \code{subsampleCounts} is a modified SE/TSE.
}
\examples{
# When samples in TreeSE are less than specified min_size, they will be removed.
# If after subsampling features are not present in any of the samples, 
# they will be removed.
data("GlobalPatterns")
tse <- GlobalPatterns
tse.subsampled <- subsampleCounts(tse, 
                                  min_size = 60000, 
                                  name = "subsampled", 
                                  seed = 123,
                                  return_type = "TreeSummarizedExperiment")
tse.subsampled
dim(tse)
dim(tse.subsampled)

# Return MultiAssayExperiment
mae <- subsampleCounts(tse, 
                       min_size = 60000, 
                       name = "subsampled",
                       seed = 123,
                       return_type = "MultiAssayExperiment")
mae

}
\references{
McMurdie PJ, Holmes S. Waste not, want not: why rarefying microbiome data
is inadmissible. PLoS computational biology. 2014 Apr 3;10(4):e1003531.

Gloor GB, Macklaim JM, Pawlowsky-Glahn V & Egozcue JJ (2017)
Microbiome Datasets Are Compositional: And This Is Not Optional.
Frontiers in Microbiology 8: 2224. doi: 10.3389/fmicb.2017.02224

Weiss S, Xu ZZ, Peddada S, Amir A, Bittinger K, Gonzalez A, Lozupone C,
Zaneveld JR, VÃ¡zquez-Baeza Y, Birmingham A, Hyde ER. Normalization and
microbial differential abundance strategies depend upon data characteristics.
Microbiome. 2017 Dec;5(1):1-8.
}
\author{
Sudarshan A. Shetty
}
